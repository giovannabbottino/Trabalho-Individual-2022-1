name: Test

on: [push, pull_request]

jobs:
  front_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./library_front

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Run npm install
        run: npm install

      - name: Run test
        run: npm run test

  back_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./library_back
    env:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
           python-version: 3.8
      - name: Install requirements
        run: |
            pip install -r requirements.txt
      - name: Run tests
        env:
            DEBUG: "0"
            DB_USERNAME: ${{ env.POSTGRES_USER }}
            DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
            DB_HOST: ${{ env.POSTGRES_HOST }}
            DB_DATABASE: ${{ env.POSTGRES_DB }}
            DB_PORT: ${{ env.POSTGRES_PORT }}
        run: |
            python manage.py test
